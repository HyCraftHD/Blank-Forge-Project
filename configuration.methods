def setup() {
	loadConfig()
	checkVersionAndSetup()
}

def loadConfig() {
	ext.buildProps = file "build.properties"

	buildProps.withReader {
		def prop = new Properties()
		prop.load(it)
		ext.config = new ConfigSlurper().parse prop
	}
}

def checkVersionAndSetup() {
	if(config.get("forge").get("mcversion") != null) {
		findVersions(config.forge.mcversion)
	}
}

def findVersions(version) {
	def major_forge_version = 	[
						"1.14.2": "26",
						"1.14.3": "27",
						"1.14.4": "28",
						"1.15.1": "30",
						"1.15.2": "31"
					]
	def forge_minor_version = 	[
						"1.14.2": "0.63",
						"1.14.3": "0.60",
						"1.14.4": "1.117",
						"1.15.1": "0.30",
						"1.15.2": "0.16"
					]
	def mapping = 			[
						"1.14.2":"53-1.14.2",
						"1.14.3":"20190804-1.14.3",
						"1.14.4":"58-1.14.4",
						"1.15.1":"20191231-1.14.3",
						"1.15.2":"20200201-1.15.1"
					]
	def mapping_channel = 		[
						"1.14.2":"stable",
						"1.14.3":"snapshot",
						"1.14.4":"stable",
						"1.15.1":"snapshot",
						"1.15.2":"snapshot"
					]	
	def uteamcore_version = 	[	
						"1.14.2":"2.7.0.127",
						"1.14.3":"2.7.0.128",
						"1.14.4":"2.8.1.148",
						"1.15.1":"2.9.3.145",
						"1.15.2":"2.10.1.149"
					]
	
	config.forge.major_version = major_forge_version."$version";
	config.forge.version = "$version" << "-" << major_forge_version."$version" << "." << forge_minor_version."$version";
	config.forge.mapping = mapping."$version";
	config.forge.mapping_channel = mapping_channel."$version";
	config.uteamcore.version = uteamcore_version."$version";
}

def info() {
	println "Using the following settings:"
	if(config.get("forge").get("mcversion") != null) {
		println "Minecraft version: ${config.forge.mcversion}"
		println "Minecraft version found. Fetched newest versions automatically"
	}
	println "Forge version: ${config.forge.version}"
	println "Forge mapping: ${config.forge.mapping}"
}

ext {
	setup = this.&setup
	info = this.&info
}
